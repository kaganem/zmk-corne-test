/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp ESC   &kp Q &kp    W &kp     E &kp R &kp T &kp Y    &kp    U &kp     I &kp   O &kp P    &kp GRAVE
   &kp LSHFT &kp A &kp    S &kp     D &kp F &kp G &kp H    &kp    J &kp     K &kp   L &kp SEMI &kp SQT
   &kp LCTRL &kp Z &kp    X &kp     C &kp V &kp B &kp N    &kp    M &kp COMMA &kp DOT &kp FSLH &kp RET
                   &kp LGUI &kp SPACE &mo 1 &mo 2 &kp BSPC &kp RALT
                        >;
                };
                lower_layer {
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans   &kp LEFT &kp DOWN &kp UP &kp RIGHT  &trans
   &kp LCTRL  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                           &trans       &trans       &trans       &trans         &trans   &trans 
                        >;
                };

                raise_layer {
                        bindings = <
   &kp   TAB &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &trans   &trans   &trans      &trans    &trans    &rgb_ug RGB_TOG 
                        >;
                };

                adjust_layer {
                        bindings = <
   &rgb_ug RGB_HUI   &rgb_ug RGB_SAI &rgb_ug RGB_BRI &rgb_ug RGB_SPI &rgb_ug RGB_EFF &trans &trans &trans &trans &trans &trans &trans
   &rgb_ug RGB_HUD   &rgb_ug RGB_SAD &rgb_ug RGB_BRD &rgb_ug RGB_SPD &rgb_ug RGB_EFR &trans &trans &trans &trans &trans &trans &trans
   &ext_power EP_TOG &trans          &trans          &trans &trans &trans &trans &trans &trans &trans &trans &trans
                    	                             &out OUT_TOG &trans &trans &trans &trans &trans    
                        >;
                };
        };
};
